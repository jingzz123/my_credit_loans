package cn.creditloans.manager.controllers;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.creditloans.core.dto.inner.InnerRoleDTO;
import cn.creditloans.core.service.InnerRoleService;
import cn.creditloans.core.tools.constants.Constants;
import cn.creditloans.core.tools.page.PageModel;
import cn.creditloans.core.tools.util.ElectricPropertyPlaceholderConfigurer;

@Controller
@RequestMapping(value = "/inner/role")
public class InnerRoleController {
	private static final Log logger = LogFactory.getLog(InnerRoleController.class);
	
	@Autowired
	private InnerRoleService innerRoleService;
	
	/**
	 * 打开角色管理的页面
	 * @param model
	 * @param _currentPage
	 * @param innerRoleDTO
	 * @return
	 */
	@RequestMapping(value = "/showList", method = { RequestMethod.GET,
			RequestMethod.POST })
	public String enterpriseRoleList(Model model, @RequestParam(value = "currentPage", required = false) String _currentPage, InnerRoleDTO innerRoleDTO) {
		int currentPage = 1;
		if (_currentPage != null && _currentPage != "") {
			currentPage = Integer.parseInt(_currentPage.toString());
		}  
		int pageSize = Integer.parseInt(ElectricPropertyPlaceholderConfigurer.getContextProperty(Constants.PLATFORM_PAGE_SHOW_COUNT));
		
		PageModel<InnerRoleDTO> innerRolePage = innerRoleService.getInnerRolePageList(innerRoleDTO, currentPage, pageSize);
		model.addAttribute("innerRolePage", innerRolePage);
		model.addAttribute("queryDto", innerRoleDTO);
		return "/inner/role/inner_role_list";
	}
	
	/**
	 * 打开角色管理添加的页面
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/add", method = { RequestMethod.GET,
			RequestMethod.POST })
	public String showAddPlatformRole(Model model){
		return "/inner/role/inner_role_add";
	}
	
	/**
	 * 添加角色
	 * @param innerRoleDTO
	 * @return
	 */
	@RequestMapping(value="/doAdd", method={RequestMethod.GET, RequestMethod.POST})
	public @ResponseBody int addInnerRole(@RequestBody InnerRoleDTO innerRoleDTO) {
		int innerRoleId = innerRoleService.saveCascadeInnerRoleAndPrivilege(innerRoleDTO);
		return innerRoleId;
	}
	
	/**
	 * 打开角色管理修改的页面
	 * @param model roleId
	 * @return
	 */
	@RequestMapping(value = "/edit", method = { RequestMethod.GET,
			RequestMethod.POST })
	public String showEditInnermRole(Model model,@RequestParam(value = "roleId", required = false) String roleId){
		InnerRoleDTO innerRoleDTO = innerRoleService.getCascadeInnerRoleAndPrivilegeByRoleId(Integer.parseInt(roleId));
		model.addAttribute("platformRoleDto", innerRoleDTO);
		return "/platform/role/platform_role_edit";
	}
	
	/**
	 * 修改角色
	 * @param platformRoleDto
	 * @return
	 */
	@RequestMapping(value="/doEdit", method={RequestMethod.GET, RequestMethod.POST})
	public @ResponseBody void editInnerRole(@RequestBody InnerRoleDTO innerRoleDTO){
		innerRoleService.updateInnerRole(innerRoleDTO);
	}
	
	/**
	 * 删除角色
	 * @param roleId
	 * @return
	 */
	@RequestMapping(value="/doDelete", method={RequestMethod.GET, RequestMethod.POST})
	public @ResponseBody void deleteInnerRole(@RequestParam(value = "roleId", required = false) String roleId){
		try {
			innerRoleService.deleteInnerRole(Integer.parseInt(roleId));
		} catch (Exception e) {
			if (logger.isErrorEnabled()) {
				logger.error(e.getMessage(), e);
			}
			throw new RuntimeException(e);
		}
	}
}
