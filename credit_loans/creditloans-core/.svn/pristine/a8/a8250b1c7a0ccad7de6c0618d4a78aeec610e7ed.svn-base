package cn.creditloans.core.service.impl.af;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.creditloans.core.dao.af.RulesetElementDao;
import cn.creditloans.core.dto.af.BaseElementDTO;
import cn.creditloans.core.dto.af.RulesetElementDTO;
import cn.creditloans.core.entity.af.BaseElement;
import cn.creditloans.core.entity.af.RulesetElement;
import cn.creditloans.core.service.RulesetElementService;
import cn.creditloans.tools.page.PageModel;
@Service("rulesetElementServie")
public class RulesetElementServiceImpl implements RulesetElementService {
	private static final Log logger = LogFactory.getLog(RulesetElementServiceImpl.class);
	@Autowired
	RulesetElementDao rulesetElementDao;
	
	@Override
	public PageModel<RulesetElementDTO> getRulesetElementPageList(
			RulesetElementDTO rulesetElementDTO, int currentPage, int pageSize) {
		RulesetElement rulesetElement = new RulesetElement();
		BeanUtils.copyProperties(rulesetElementDTO, rulesetElement);
		
		PageModel<RulesetElementDTO> pm = new PageModel<RulesetElementDTO>();
		pm.init(currentPage, pageSize);
		int count = rulesetElementDao.selectPageCount(rulesetElement);
		List<RulesetElement> rulesetElementList = rulesetElementDao.selectPageList(rulesetElement, pm);
		List<RulesetElementDTO> rulesetElementDtoList = new ArrayList<RulesetElementDTO>();
		for(RulesetElement _rulesetElement : rulesetElementList){
			RulesetElementDTO _rulesetElementDTO = new RulesetElementDTO();
			BeanUtils.copyProperties(_rulesetElement, _rulesetElementDTO);
			rulesetElementDtoList.add(_rulesetElementDTO);
		}
		
		pm.setTotal(count);
		pm.setDatas(rulesetElementDtoList);
		return pm;
	}

	@Override
	public int saveRulesetElement(RulesetElementDTO rulesetElementDTO) {
		RulesetElement rulesetElement = new RulesetElement();
		BeanUtils.copyProperties(rulesetElementDTO, rulesetElement);
		rulesetElementDao.insert(rulesetElement);
		int rulesetElementId = rulesetElement.getId();
		return rulesetElementId;
	}

	@Override
	public RulesetElementDTO getRulesetElementById(int rulesetElementId) {
		RulesetElementDTO rulesetElementDTO = new RulesetElementDTO();
		RulesetElement rulesetElement = rulesetElementDao.select(rulesetElementId);
		BeanUtils.copyProperties(rulesetElement, rulesetElementDTO);
		return rulesetElementDTO;
	}

	@Override
	public void updateRulesetElement(RulesetElementDTO rulesetElementDTO) {
		RulesetElement rulesetElement = new RulesetElement();
		BeanUtils.copyProperties(rulesetElementDTO, rulesetElement);
		rulesetElementDao.update(rulesetElement);
	}

	@Override
	public void deleteRulesetElement(int rulesetElementId) {
		rulesetElementDao.delete(rulesetElementId);
	}

}
