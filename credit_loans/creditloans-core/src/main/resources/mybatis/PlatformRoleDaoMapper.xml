<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="cn.creditloans.core.dao.PlatformRoleDao">

	<resultMap id="platformRoleResultMap" type="cn.creditloans.core.entity.platform.PlatformRole">
        <id property="id" column="id" />
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
	
	<resultMap id="cascadePlatformRoleMenuResultMap" type="cn.creditloans.core.entity.platform.PlatformRole" extends="platformRoleResultMap">  
        <collection property="platformRoleMenuList" javaType="ArrayList" column="id" ofType="cn.creditloans.core.entity.platform.PlatformRoleMenu" 
                    select="selectPlatformRoleMenuListByRoleId"/>           
    </resultMap>
    
    <resultMap id="platformRoleMenuResultMap" type="cn.creditloans.core.entity.platform.PlatformRoleMenu">
        <id property="id" column="id" />
        <result property="roleId" column="role_id"/>
        <result property="menuId" column="menu_id"/>
    </resultMap>
    
    <select id="selectCascadePlatformRoleMenuByRoleId" parameterType="int" resultMap="cascadePlatformRoleMenuResultMap">
    	select id, name, description, status, create_time, update_time from platform_role where id=#{roleId}
    </select>
    
    <select id="selectPlatformRoleMenuListByRoleId" parameterType="int" resultMap="platformRoleMenuResultMap">
        select id, role_id, menu_id from platform_role_menu where role_id = #{id}
    </select>
    
    <select id="selectPlatformRoleListByEnterpriseId" parameterType="int" resultMap="platformRoleResultMap">
    	select id, name, description, status, create_time, update_time from platform_role where enterprise_id=#{enterpriseId}
    </select>
    
    <select id="selectPlatformRoleMenuCountByMenuId" parameterType="int" resultType="int">
    	select count(1) from platform_role_menu where menu_id=#{menuId}
    </select>
    
    <select id="selectPlatformRolePageCount" resultType="int" parameterType="cn.creditloans.core.entity.platform.PlatformRole">
    	select count(1) from platform_role where 1=1
        <if test="name != null and '' != name">  
			and name like '%${name}%' 
		</if>
    </select>
    
    <select id="selectPlatformRolePageList" resultMap="platformRoleResultMap">
        select id, name, description, status, create_time, update_time from platform_role
        where 1=1
        <if test="role.name != null and '' != role.name">  
			and name like '%${role.name}%' 
		</if>
		order by create_time desc limit #{pm.pageSize} offset #{pm.startCount}
    </select>
    
    <select id="selectPlatformRoleList" resultMap="platformRoleResultMap">
    	select id, name, description, status, create_time, update_time from platform_role
    </select>
    
    <insert id="insertPlatformRole" parameterType="cn.creditloans.core.entity.platform.PlatformRole">
    	<selectKey order="AFTER" keyProperty="id" resultType="java.lang.Integer">
			SELECT currval('platform_role_id_seq')
		</selectKey>
		
		insert into platform_role ( name, description, status, create_time, update_time )
					values (#{name}, #{description}, #{status}, now(), now())
    </insert>
    
    <insert id="batchInsertPlatformRoleMenu" parameterType="java.util.List">
        insert into platform_role_menu (role_id, menu_id, create_time, update_time)  
        VALUES  
        <foreach collection="list" item="item" index="index" separator=",">  
            (#{item.roleId}, #{item.menuId}, now(), now())
        </foreach>  
    </insert>
    
    <update id="updatePlatformRole" parameterType="cn.creditloans.core.entity.platform.PlatformRole">
    	update platform_role set name=#{name}, description=#{description}, status=#{status}, update_time=now() where id=#{id}
    </update>
    
    <delete id="deletePlatformRoleById" parameterType="int">
    	delete from platform_role where id=#{roleId}
    </delete>
    
    <delete id="deletePlatformRoleMenuByRoleId" parameterType="int">
    	delete from platform_role_menu where role_id=#{roleId}
    </delete>
    
</mapper>